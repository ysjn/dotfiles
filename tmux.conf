#
# Settings
#

# set true color
# set -g default-terminal "xterm-256color"
set -g default-terminal "alacritty"
set -sa terminal-features ',alacritty:RGB'
set -ga terminal-features ",alacritty:usstyle"

set -g mouse on
set -g mode-keys vi
set -g focus-events on

set -g base-index 1
set -g renumber-windows on

#
# Key bind
#

# # Smart pane switching with awareness of Vim splits.
# # See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#   | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|l?n?vim?x?|fzf)(diff)?$'"

# work around for is_vim not working
# @see:(https://github.com/christoomey/vim-tmux-navigator/issues/295#issuecomment-1021591011)
is_vim="children=(); i=0; pids=( $(ps -o pid=,tty= | grep -iE '#{s|/dev/||:pane_tty}' | awk '\{print $1\}') ); \
while read -r c p; do [[ -n c && c -ne p && p -ne 0 ]] && children[p]+=\" $\{c\}\"; done <<< \"$(ps -Ao pid=,ppid=)\"; \
while (( $\{#pids[@]\} > i )); do pid=$\{pids[i++]\}; pids+=( $\{children[pid]-\} ); done; \
ps -o state=,comm= -p \"$\{pids[@]\}\" | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# on key-down "alt-hjkl", if vim, send "alt-hjkl" else send "select-pane"
bind -n 'M-h' if-shell "$is_vim" 'send-keys M-h' 'select-pane -L'
bind -n 'M-j' if-shell "$is_vim" 'send-keys M-j' 'select-pane -D'
bind -n 'M-k' if-shell "$is_vim" 'send-keys M-k' 'select-pane -U'
bind -n 'M-l' if-shell "$is_vim" 'send-keys M-l' 'select-pane -R'

# on key-down "prefix" then "shift-hjkl", if vim, send "alt-shift hjkl" else "resize-pane"
bind -r -T prefix H if-shell "$is_vim" 'send-keys M-H' 'resize-pane -L 10'
bind -r -T prefix J if-shell "$is_vim" 'send-keys M-J' 'resize-pane -D 5'
bind -r -T prefix K if-shell "$is_vim" 'send-keys M-K' 'resize-pane -U 5'
bind -r -T prefix L if-shell "$is_vim" 'send-keys M-L' 'resize-pane -R 10'

# move windows
bind -r P swap-window -dt -1
bind -r N swap-window -dt +1

# enter copy-mode by c-f / c-b
bind -n -T root 'c-f' if-shell "$is_vim" 'send-keys c-f' 'copy-mode -eu'
bind -n -T root 'c-b' if-shell "$is_vim" 'send-keys c-b' 'copy-mode -e'

# additional vim-bindings for copy-mode
bind -n -T copy-mode-vi 'c-f' 'send-keys -X halfpage-down'
bind -n -T copy-mode-vi 'c-b' 'send-keys -X halfpage-up'
bind -n -T copy-mode-vi 'c-h' 'send-keys -X back-to-indentation'
bind -n -T copy-mode-vi 'c-l' 'send-keys -X end-of-line; send-keys -X cursor-left'
bind -n -T copy-mode-vi 'v' 'send-keys -X begin-selection'
bind -n -T copy-mode-vi 'c-v' 'send-keys -X rectangle-on; send-keys -X begin-selection'
bind -n -T copy-mode-vi 'y' 'send-keys -X copy-pipe "pbcopy"'

# change prefix
unbind C-b
set -g prefix C-k

# open panes in cwd
unbind %
bind v split-window -h -c "#{pane_current_path}"
unbind \"
bind h split-window -v -c "#{pane_current_path}"

# prefix + r to reload config
bind r source-file $HOME/.config/tmux/tmux.conf \; display 'tmux.conf reloaded.'

#
# Plugins
#
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'wfxr/tmux-fzf-url'

set -g @resurrect-strategy-nvim 'session'
set -g @continuum-restore 'on'

#
# UI
#
set -g status-left ''
set -g status-right ''
set -g status-left-length 0
set -g status-right-length 0
set -g status-style 'bg=colour233#{?client_prefix,,#[bg=default]}'
set -g status-justify 'absolute-centre'

set -g pane-border-format ''
set -g pane-border-style 'fg=black'
set -g pane-border-status 'bottom'
set -g pane-border-lines 'double'

set -g window-status-current-format '#[bg=colour117, fg=colour233] #{?window_zoomed_flag,[+],#I} #[bg=default, fg=colour255] #{b:pane_current_path} '
set -g window-status-format '#[bg=default, fg=colour240] #I #{b:pane_current_path} '

set -g window-style 'fg=colour240'
set -g window-active-style 'fg=terminal'

run '~/.tmux/plugins/tpm/tpm'

